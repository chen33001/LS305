dta$Yang_def <- as.factor(dta$Yang_def)
support <- c(min(dta$variable), max(dta$variable))
ggplot(dta, aes(x = distance, y = variable, color = Yang_def)) +
geom_point(alpha = 0.2, size = 1.3) +
geom_smooth(method = "loess", se = F) +
xlab("Propensity score") +
ylab(variable) +
theme_bw() +
ylim(support)
}
grid.arrange(
fn_bal(dta_m2, "BODY_WEIGHT"),
fn_bal(dta_m2, "BMI") + theme(legend.position = "none"),
fn_bal(dta_m2, "BODY_FAT_RATE"),
fn_bal(dta_m2, "BODY_WAISTLINE") + theme(legend.position = "none"),
fn_bal(dta_m2, "BODY_BUTTOCKS"),
nrow = 3, widths = c(1, 0.8)
)
#痰盂
fn_bal <- function(dta, variable) {
dta$variable <- dta[, variable]
if (variable == 'BMI') dta$variable <- dta$variable / 10^3
dta$Phlegm_stasis <- as.factor(dta$Phlegm_stasis)
support <- c(min(dta$variable), max(dta$variable))
ggplot(dta, aes(x = distance, y = variable, color = Phlegm_stasis)) +
geom_point(alpha = 0.2, size = 1.3) +
geom_smooth(method = "loess", se = F) +
xlab("Propensity score") +
ylab(variable) +
theme_bw() +
ylim(support)
}
grid.arrange(
fn_bal(dta_m3, "BODY_WEIGHT"),
fn_bal(dta_m3, "BMI") + theme(legend.position = "none"),
fn_bal(dta_m3, "BODY_FAT_RATE"),
fn_bal(dta_m3, "BODY_WAISTLINE") + theme(legend.position = "none"),
fn_bal(dta_m3, "BODY_BUTTOCKS"),
nrow = 3, widths = c(1, 0.8)
)
#第4.2 Difference-in-means
#陰虛
dta_m1 %>%
group_by(Yin_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(mean))
lapply(PSM_COV, function(v) {
t.test(dta_m1[, v] ~ dta_m1$Yin_def)
})
#陽虛
dta_m2 %>%
group_by(Yang_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(mean))
lapply(PSM_COV, function(v) {
t.test(dta_m2[, v] ~ dta_m2$Yang_def)
})
#痰盂
dta_m3 %>%
group_by(Phlegm_stasis) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(mean))
lapply(PSM_COV, function(v) {
t.test(dta_m3[, v] ~ dta_m3$Phlegm_stasis)
})
#第5步Estimating treatment effects
#陰虛
with(dta_m1, t.test(BMI ~ Yin_def))
lm_treat1 <- lm(BMI ~ Yin_def, data = dta_m1)
summary(lm_treat1)
lm_treat2 <- lm(BMI ~ Yin_def + BODY_WEIGHT  + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = dta_m1)
summary(lm_treat2)
#陽虛
with(dta_m2, t.test(BMI ~ Yang_def))
lm_treat1 <- lm(BMI ~ Yang_def, data = dta_m2)
summary(lm_treat1)
lm_treat2 <- lm(BMI ~ Yang_def + BODY_WEIGHT  + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = dta_m2)
summary(lm_treat2)
#痰盂
with(dta_m3, t.test(BMI ~ Phlegm_stasis))
lm_treat1 <- lm(BMI ~ Phlegm_stasis, data = dta_m3)
summary(lm_treat1)
lm_treat2 <- lm(BMI ~ Phlegm_stasis + BODY_WEIGHT  + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = dta_m3)
summary(lm_treat2)
write.csv(dta_m1,file='C:\\Users\\user\\Desktop\\傾向分數估計\\陰虛傾向分數估計.csv',fileEncoding = "Big5")
write.csv(dta_m2,file='C:\\Users\\user\\Desktop\\傾向分數估計\\陽虛傾向分數估計.csv',fileEncoding = "Big5")
write.csv(dta_m3,file='C:\\Users\\user\\Desktop\\傾向分數估計\\痰盂傾向分數估計.csv',fileEncoding = "Big5")
#資料讀取
TCM_Anova <- read.csv("C:\\R\\LS305中醫\\TCM_Anova.csv",fileEncoding = "big5")
lab_info_input <- read.csv("C:\\R\\LS305中醫\\lab_info.csv",fileEncoding = "big5")
#資料清洗
names(lab_info_input)[1] <- "Release_No"
lab_info_firstwash <- subset(lab_info_input,select=c("Release_No","TWB1_ID","FOLLOW"))
lab_info_secondwash <- subset(lab_info_firstwash, FOLLOW=="Baseline")
lab_info_secondwash<-data.table(lab_info_secondwash)
lab_info <- lab_info_secondwash[grepl('TWB',TWB1_ID)]
PSM <- merge(lab_info,TCM_Anova)
PSM <-subset(PSM, select = c(-X))
PSM <- as.data.frame(PSM)
library(MatchIt)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(data.table)
#資料讀取
TCM_Anova <- read.csv("C:\\R\\LS305中醫\\TCM_Anova.csv",fileEncoding = "big5")
lab_info_input <- read.csv("C:\\R\\LS305中醫\\lab_info.csv",fileEncoding = "big5")
#資料清洗
names(lab_info_input)[1] <- "Release_No"
lab_info_firstwash <- subset(lab_info_input,select=c("Release_No","TWB1_ID","FOLLOW"))
lab_info_secondwash <- subset(lab_info_firstwash, FOLLOW=="Baseline")
lab_info_secondwash<-data.table(lab_info_secondwash)
lab_info <- lab_info_secondwash[grepl('TWB',TWB1_ID)]
PSM <-subset(PSM, select = c(-X))
PSM <- merge(lab_info,TCM_Anova)
View(PSM)
#第3步Executing a matching algorithm
#陰虛
PSM_nomiss <- PSM %>%  # MatchIt does not allow missing values
select(Release_No, Yin_def, one_of(PSM_COV)) %>%
na.omit()
mod_match1 <- matchit(Yin_def ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS,
method = "nearest", data = PSM_nomiss)
#第1步Difference-in-means: pre-treatment covariates
#陰虛
PSM %>%
group_by(Yin_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(~mean(., na.rm = T)))
lapply(PSM_COV, function(v) {
t.test(PSM[ ,v] ~ PSM[ ,'Yin_def'])
})
#欲觀察的變數
PSM_COV <- c("BODY_WEIGHT","BMI","BODY_FAT_RATE","BODY_WAISTLINE","BODY_BUTTOCKS","WHR",
"CREATININE","URIC_ACID")
#第1步Difference-in-means: pre-treatment covariates
#陰虛
PSM %>%
group_by(Yin_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(~mean(., na.rm = T)))
lapply(PSM_COV, function(v) {
t.test(PSM[ ,v] ~ PSM[ ,'Yin_def'])
})
#資料讀取
TCM_Anova <- read.csv("C:\\R\\LS305中醫\\TCM_Anova.csv",fileEncoding = "big5")
lab_info_input <- read.csv("C:\\R\\LS305中醫\\lab_info.csv",fileEncoding = "big5")
#資料清洗
names(lab_info_input)[1] <- "Release_No"
lab_info_firstwash <- subset(lab_info_input,select=c("Release_No","TWB1_ID","FOLLOW"))
lab_info_secondwash <- subset(lab_info_firstwash, FOLLOW=="Baseline")
lab_info_secondwash<-data.table(lab_info_secondwash)
lab_info <- lab_info_secondwash[grepl('TWB',TWB1_ID)]
PSM <- merge(lab_info,TCM_Anova)
PSM <-subset(PSM, select = c(-X))
PSM <- as.data.frame(PSM)
#欲觀察的變數
PSM_COV <- c("BODY_WEIGHT","BMI","BODY_FAT_RATE","BODY_WAISTLINE","BODY_BUTTOCKS","WHR",
"CREATININE","URIC_ACID")
#第1步Difference-in-means: pre-treatment covariates
#陰虛
PSM %>%
group_by(Yin_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(~mean(., na.rm = T)))
lapply(PSM_COV, function(v) {
t.test(PSM[ ,v] ~ PSM[ ,'Yin_def'])
})
#陽虛
PSM %>%
group_by(Yang_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(~mean(., na.rm = T)))
lapply(PSM_COV, function(v) {
t.test(PSM[, v] ~ PSM[, 'Yang_def'])
})
PSM %>%
group_by(Phlegm_stasis) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(~mean(., na.rm = T)))
lapply(PSM_COV, function(v) {
t.test(PSM[, v] ~ PSM[, 'Phlegm_stasis'])
})
#第2步傾向得分估計
#陰虛
m_ps1 <- glm(Yin_def ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = PSM)
summary(m_ps1)
prs_df1 <- data.frame(pr_score = predict(m_ps1, type = "response"),
Yin_def = m_ps1$model$Yin_def)
head(prs_df1)
#陽虛
m_ps2 <- glm(Yang_def ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = PSM)
summary(m_ps2)
prs_df2 <- data.frame(pr_score = predict(m_ps2, type = "response"),
Yang_def = m_ps2$model$Yang_def)
head(prs_df2)
#痰盂
m_ps3 <- glm(Phlegm_stasis ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = PSM)
summary(m_ps3)
prs_df3 <- data.frame(pr_score = predict(m_ps3, type = "response"),
Phlegm_stasis = m_ps3$model$Phlegm_stasis)
head(prs_df3)
#Examining the region of common support
#陰虛
labs <- paste(c("Yin_def", "Not_Yin_def"))
prs_df1 %>%
mutate(Yin_def = ifelse(Yin_def == 1, labs[1], labs[2])) %>%
ggplot(aes(x = pr_score)) +
geom_histogram(color = "white") +
facet_wrap(~Yin_def) +
xlab("Probability of Yin_def") +
theme_bw()
#陽虛
labs <- paste(c("Yang_def", "Not_Yang_def"))
prs_df2 %>%
mutate(Yang_def = ifelse(Yang_def == 1, labs[1], labs[2])) %>%
ggplot(aes(x = pr_score)) +
geom_histogram(color = "white") +
facet_wrap(~Yang_def) +
xlab("Probability of Yang_def") +
theme_bw()
#痰盂
labs <- paste(c("Phlegm_stasis", "Not_Phlegm_stasis"))
prs_df3 %>%
mutate(Phlegm_stasis = ifelse(Phlegm_stasis == 1, labs[1], labs[2])) %>%
ggplot(aes(x = pr_score)) +
geom_histogram(color = "white") +
facet_wrap(~Phlegm_stasis) +
xlab("Probability of Phlegm_stasis_def") +
theme_bw()
#第3步Executing a matching algorithm
#陰虛
PSM_nomiss <- PSM %>%  # MatchIt does not allow missing values
select(Release_No, Yin_def, one_of(PSM_COV)) %>%
na.omit()
mod_match1 <- matchit(Yin_def ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS,
method = "nearest", data = PSM_nomiss)
dta_m1 <- match.data(mod_match1)
dim(dta_m1)
PSM_nomiss <- PSM %>%  # MatchIt does not allow missing values
select(Release_No, Yang_def, one_of(PSM_COV)) %>%
na.omit()
mod_match2 <- matchit(Yang_def ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS,
method = "nearest", data = PSM_nomiss)
dta_m2 <- match.data(mod_match2)
dim(dta_m2)
PSM_nomiss <- PSM %>%  # MatchIt does not allow missing values
select(Release_No, Phlegm_stasis, one_of(PSM_COV)) %>%
na.omit()
mod_match3 <- matchit(Phlegm_stasis ~ BODY_WEIGHT + BMI + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS,
method = "nearest", data = PSM_nomiss)
dta_m3 <- match.data(mod_match3)
dim(dta_m3)
#第4步Examining covariate balance in the matched sample
#陰虛
fn_bal <- function(dta, variable) {
dta$variable <- dta[, variable]
if (variable == 'BMI') dta$variable <- dta$variable / 10^3
dta$Yin_def <- as.factor(dta$Yin_def)
support <- c(min(dta$variable), max(dta$variable))
ggplot(dta, aes(x = distance, y = variable, color = Yin_def)) +
geom_point(alpha = 0.2, size = 1.3) +
geom_smooth(method = "loess", se = F) +
xlab("Propensity score") +
ylab(variable) +
theme_bw() +
ylim(support)
}
grid.arrange(
fn_bal(dta_m1, "BODY_WEIGHT"),
fn_bal(dta_m1, "BMI") + theme(legend.position = "none"),
fn_bal(dta_m1, "BODY_FAT_RATE"),
fn_bal(dta_m1, "BODY_WAISTLINE") + theme(legend.position = "none"),
fn_bal(dta_m1, "BODY_BUTTOCKS"),
nrow = 3, widths = c(1, 0.8)
)
#陽虛
fn_bal <- function(dta, variable) {
dta$variable <- dta[, variable]
if (variable == 'BMI') dta$variable <- dta$variable / 10^3
dta$Yang_def <- as.factor(dta$Yang_def)
support <- c(min(dta$variable), max(dta$variable))
ggplot(dta, aes(x = distance, y = variable, color = Yang_def)) +
geom_point(alpha = 0.2, size = 1.3) +
geom_smooth(method = "loess", se = F) +
xlab("Propensity score") +
ylab(variable) +
theme_bw() +
ylim(support)
}
grid.arrange(
fn_bal(dta_m2, "BODY_WEIGHT"),
fn_bal(dta_m2, "BMI") + theme(legend.position = "none"),
fn_bal(dta_m2, "BODY_FAT_RATE"),
fn_bal(dta_m2, "BODY_WAISTLINE") + theme(legend.position = "none"),
fn_bal(dta_m2, "BODY_BUTTOCKS"),
nrow = 3, widths = c(1, 0.8)
)
#痰盂
fn_bal <- function(dta, variable) {
dta$variable <- dta[, variable]
if (variable == 'BMI') dta$variable <- dta$variable / 10^3
dta$Phlegm_stasis <- as.factor(dta$Phlegm_stasis)
support <- c(min(dta$variable), max(dta$variable))
ggplot(dta, aes(x = distance, y = variable, color = Phlegm_stasis)) +
geom_point(alpha = 0.2, size = 1.3) +
geom_smooth(method = "loess", se = F) +
xlab("Propensity score") +
ylab(variable) +
theme_bw() +
ylim(support)
}
grid.arrange(
fn_bal(dta_m3, "BODY_WEIGHT"),
fn_bal(dta_m3, "BMI") + theme(legend.position = "none"),
fn_bal(dta_m3, "BODY_FAT_RATE"),
fn_bal(dta_m3, "BODY_WAISTLINE") + theme(legend.position = "none"),
fn_bal(dta_m3, "BODY_BUTTOCKS"),
nrow = 3, widths = c(1, 0.8)
)
#第4.2 Difference-in-means
#陰虛
dta_m1 %>%
group_by(Yin_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(mean))
lapply(PSM_COV, function(v) {
t.test(dta_m1[, v] ~ dta_m1$Yin_def)
})
#陽虛
dta_m2 %>%
group_by(Yang_def) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(mean))
lapply(PSM_COV, function(v) {
t.test(dta_m2[, v] ~ dta_m2$Yang_def)
})
#痰盂
dta_m3 %>%
group_by(Phlegm_stasis) %>%
select(one_of(PSM_COV)) %>%
summarise_all(list(mean))
lapply(PSM_COV, function(v) {
t.test(dta_m3[, v] ~ dta_m3$Phlegm_stasis)
})
#第5步Estimating treatment effects
#陰虛
with(dta_m1, t.test(BMI ~ Yin_def))
lm_treat1 <- lm(BMI ~ Yin_def, data = dta_m1)
summary(lm_treat1)
lm_treat2 <- lm(BMI ~ Yin_def + BODY_WEIGHT  + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = dta_m1)
summary(lm_treat2)
#陽虛
with(dta_m2, t.test(BMI ~ Yang_def))
lm_treat1 <- lm(BMI ~ Yang_def, data = dta_m2)
summary(lm_treat1)
lm_treat2 <- lm(BMI ~ Yang_def + BODY_WEIGHT  + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = dta_m2)
summary(lm_treat2)
#痰盂
with(dta_m3, t.test(BMI ~ Phlegm_stasis))
lm_treat1 <- lm(BMI ~ Phlegm_stasis, data = dta_m3)
summary(lm_treat1)
lm_treat2 <- lm(BMI ~ Phlegm_stasis + BODY_WEIGHT  + BODY_FAT_RATE + BODY_WAISTLINE + BODY_BUTTOCKS, data = dta_m3)
summary(lm_treat2)
write.csv(dta_m1,file='C:\\Users\\user\\Desktop\\傾向分數估計\\陰虛傾向分數估計.csv',fileEncoding = "Big5")
write.csv(dta_m2,file='C:\\Users\\user\\Desktop\\傾向分數估計\\陽虛傾向分數估計.csv',fileEncoding = "Big5")
write.csv(dta_m3,file='C:\\Users\\user\\Desktop\\傾向分數估計\\痰盂傾向分數估計.csv',fileEncoding = "Big5")
View(dta_m1)
#survey
source("C:\\Github\\LS305\\statisticaltests.R")
library(dplyr)
#讀取資料
PSM_yin <- read.csv("C:\\Github\\LS305\\Table1資料\\陰虛傾向分數估計.csv")
PSM_yang <- read.csv("C:\\Github\\LS305\\Table1資料\\陽虛傾向分數估計.csv")
PSM_Phlegm <- read.csv("C:\\Github\\LS305\\Table1資料\\痰盂傾向分數估計.csv")
survey_tcm <- read.csv("C:\\Github\\LS305\\Table1資料\\survey_tcm.csv")
#資料配對&清洗
#陰虛
Table1_yin <- merge(PSM_yin ,survey_tcm, by = "Release_No", all.survey_tcm = T) %>%
subset(., select = c(-X, -Yin_def.y, -distance, -weights, -subclass  )) %>%
rename(Yin_def = Yin_def.x)
#陰虛修改欄位順序
yin_cols <- colnames(Table1_yin)
yin_new_cols <- c(yin_cols[1], yin_cols[2], yin_cols[13], yin_cols[14], yin_cols[3:12], yin_cols[15:25])
Table1_yin <- Table1_yin[,yin_new_cols]
#陽虛
Table1_yang <- merge(PSM_yang ,survey_tcm, by = "Release_No", all.survey_tcm = T) %>%
subset(., select = c(-X, -Yang_def.y, -distance, -weights, -subclass  )) %>%
rename(Yang_def = Yang_def.x)
#陽虛修改欄位順序
yang_cols <- colnames(Table1_yang)
yang_new_cols <- c(yang_cols[1], yang_cols[13], yang_cols[2], yang_cols[14], yang_cols[3:12],yang_cols[15:25])
Table1_yang <- Table1_yang[, yang_new_cols]
#痰盂
Table1_Phlegm <- merge(PSM_Phlegm ,survey_tcm, by = "Release_No", all.survey_tcm = T) %>%
subset(., select = c(-X, -Phlegm_stasis.y, -distance, -weights, -subclass  )) %>%
rename(Phlegm_stasis = Phlegm_stasis.x)
#痰盂修改欄位順序
Phlegm_cols <- colnames(Table1_Phlegm)
Phlegm_new_cols <- c(Phlegm_cols[1], Phlegm_cols[13], Phlegm_cols[14], Phlegm_cols[2], Phlegm_cols[3:12], Phlegm_cols[15:25])
Table1_Phlegm <- Table1_Phlegm[, Phlegm_new_cols]
#survey
source("C:\\Github\\LS305\\statisticaltests.R")
Table1need_yin <- read.csv("C:\\Github\\LS305\\Table1資料\\Table1need_yin.csv")
Table1need_yang <- read.csv("C:\\Github\\LS305\\Table1資料\\Table1need_yang.csv")
Table1need_Phlegm <- read.csv("C:\\Github\\LS305\\Table1資料\\Table1need_Phlegm.csv")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, Table1need_yin$AGE, summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, Table1need_yin, summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(yin, Table1need_yin, summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, AGE , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, Table1need_yin , summary = FALSE)
#survey
getwd(C:\\Github\\LS305)
#survey
setwd(C:\\Github\\LS305)
#survey
setwd(C:/Github/LS305)
#survey
setwd(C://Github//LS305)
#survey
setwd(C:\Github\LS305)
#survey
setwd("C:\\Github\\LS305")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, Table1need_yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(df, Table1need_yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, summary = FALSE)
class
class(Table1need_yin)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
#survey
setwd("C:\Github\LS305\Table1資料")
#survey
setwd("C:\\Github\\LS305\\Table1資料")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, Table1need_yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(yin, Table1need_yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
source("C:\\Github\\LS305\\statisticaltests.R")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
paste("\\","yin", "statistoca;")
getwd
getwd()
#survey
setwd("C:/Github/LS305")
setwd("C:\\Github\\LS305\\Table1資料")
setwd("C:/Github/LS305/Table1資料")
#survey
setwd("C:/Github/LS305")
setwd("C:/Github/LS305/Table1資料")
paste(getwd(),'/',dataname,'_Statistical_Tests', ".xlsx", sep = "")
paste(getwd(),'/','dataname','_Statistical_Tests', ".xlsx", sep = "")
source("C:\\Github\\LS305\\statisticaltests.R")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
source("C:\\Github\\LS305\\statisticaltests.R")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(Table1need_yin, yin , summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
statisticaltests(yin, Table1need_yin, summary = FALSE)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
yin_statistics <- statistical_tests(Table1need_yin,'yin',T)
source("C:\\Github\\LS305\\statisticaltests.R")
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
yin_statistics <- statistical_tests(Table1need_yin,'yin',T)
#計算陰虛與非陰虛數量的平均數和標準差
#先分出陰虛與非陰虛數量
yin_statistics <- statisticaltests(Table1need_yin,'yin',T)
yang_statistics <- statisticaltests(Table1need_yang,'yang',T)
Phlegm_statistics <- statisticaltests(Table1need_Phlegm,'Phlegm',T)
